version: "3"

services:
  ###########################
  # N G I N X               #
  ###########################

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx:1.25.1-alpine3.17-slim
    volumes:
      - ./web/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./web/nginx/config/fragments:/etc/nginx/fragments
      - ./web/nginx/ssl/certs:/etc/nginx/ssl
      - ./web/logs:/var/log/nginx
      - ./../src:/var/www/html
    ports:
      - "443:443"
    depends_on:
      - postgres
      - php
      - adminer
      - rasa
      - rasa-sdk

  ###########################
  # P H P                   #
  ###########################

  php:
    container_name: php
    restart: unless-stopped
    build:
      context: ./../
      dockerfile: ./docker/web/php/Dockerfile
    volumes:
      - ./../src:/var/www/html
    depends_on:
      - postgres
    links:
      - postgres

  ###########################
  # D A T A B A S E         #
  ###########################

  postgres:
    container_name: postgres
    restart: unless-stopped
    image: postgres:15.3-alpine
    ports:
      - "2345:5432"
    volumes:
      - ./database/backup:/var/lib/postgresql/data
      - ./database/dump:/opt/dump
      - ./database/scripts:/opt/scripts
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'" ]
      interval: 30s
      timeout: 60s
      retries: 5
  adminer:
    container_name: adminer
    restart: unless-stopped
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: ${DB_NAME}
      ADMINER_DESIGN: "pepa-linha"
    depends_on:
      - postgres

  ###########################
  # R A S A                 #
  ###########################

  rasa:
    container_name: rasa
    restart: unless-stopped
    build:
      context: ./../
      dockerfile: ./docker/rasa/Dockerfile
    volumes:
      - ./../rasa:/app
    ports:
      - "5005:5005"
    environment:
      SQLALCHEMY_SILENCE_UBER_WARNING: 1
    command:
      - run
      - --enable-api
      - --debug
      - --log-file
      - out.log
      - --cors
      - "*"
  rasa-sdk:
    container_name: rasa-sdk
    restart: unless-stopped
    build:
      context: ./../
      dockerfile: ./docker/rasa-sdk/Dockerfile
    volumes:
      - ./../rasa/actions:/app/actions
    ports:
      - "5055:5055"
    depends_on:
      - rasa
    links:
      - rasa